$VAR1 = [
          [
            [
              'Alchemy'
            ],
            [
              [
                [
                  [
                    'http://alchemy.cs.washington.edu/'
                  ]
                ]
              ],
              'Alchemy is a software package providing a series of algorithms for statistical relational learning and probabilistic logic inference, based on the Markov logic representation. Alchemy allows you to easily develop a wide range of AI applications, including:',
              [
                [
                  'Collective classification',
                  'Link prediction',
                  'Entity resolution',
                  'Social network modeling',
                  'Information extraction'
                ]
              ],
              []
            ],
            [
              'Aleph'
            ],
            [
              [
                [
                  [
                    'http://www.cs.ox.ac.uk/activities/machlearn/Aleph/'
                  ]
                ]
              ],
              'This document provides reference information on A Learning Engine for Proposing Hypotheses (Aleph). Aleph is an Inductive Logic Programming (ILP) system. Aleph is intended to be a prototype for exploring ideas. Aleph is an ILP algorithm implemented in Prolog by Dr Ashwin Srinivasan at the Oxford University Computing Laboratory, and is written specifically for compilation with the YAP Prolog compiler',
              []
            ]
          ],
          [
            [
              'Microprograms'
            ],
            [
              [
                [
                  [
                    'http://www.cs.indiana.edu/~leake/cbr/code/'
                  ]
                ]
              ],
              'A collection of case-based reasoning "micro" versions of dissertation programs that were developed for pedagogical purposes. These programs are meant to distill key aspects of the original programs into a form that can be easily understood, modified, and extended.',
              []
            ],
            [
              'Chess In Lisp (CIL)'
            ],
            [
              [
                [
                  [
                    'clocc.sourceforge.net'
                  ]
                ]
              ],
              'The CIL (Chess In Lisp) foundation is a Common Lisp implementaion of all the core functions needed for development of chess applications. The main purpose of the CIL project is to get AI researchers interested in using Lisp to work in the chess domain.',
              []
            ]
          ],
          [
            [
              'clasp'
            ],
            [
              [
                [
                  [
                    'http://www.cs.uni-potsdam.de/clasp/'
                  ]
                ]
              ],
              'clasp is an answer set solver for (extended) normal logic programs. It combines the high-level modeling capacities of answer set programming (ASP) with state-of-the-art techniques from the area of Boolean constraint solving. The primary clasp algorithm relies on conflict-driven nogood learning, a technique that proved very successful for satisfiability checking (SAT). Unlike other learning ASP solvers, clasp does not rely on legacy software, such as a SAT solver or any other existing ASP solver. Rather, clasp has been genuinely developed for answer set solving based on conflict-driven nogood learning. clasp can be applied as an ASP solver (on LPARSE output format), as a SAT solver (on simplified DIMACS/CNF format), or as a PB solver (on OPB format).',
              []
            ],
            [
              'ConceptNet'
            ],
            [
              [
                [
                  [
                    'http://conceptnet.media.mit.edu/'
                  ],
                  [
                    'http://web.media.mit.edu/~hugo/conceptnet/'
                  ]
                ]
              ],
              'ConceptNet aims to give computers access to common-sense knowledge, the kind of information that ordinary people know but usually leave unstated. The data in ConceptNet was collected from ordinary people who contributed it over the Web. ConceptNet represents this data in the form of a semantic network, and makes it available to be used in natural language processing and intelligent user interfaces.',
              'This API provides Python code with access to both ConceptNet 3 and the development database that will become ConceptNet 4, and the natural language tools necessary to work with it. It uses Django for interacting with the database.',
              []
            ]
          ],
          [
            [
              'ERESYE'
            ],
            [
              [
                [
                  [
                    'http://sourceforge.net/projects/eresye/'
                  ],
                  [
                    'http://www.trapexit.org/Artificial_Intelligence_with_Erlang:_the_Domain_of_Relatives'
                  ]
                ]
              ],
              'ERESYE means ERlang Expert SYstem Engine. It is a library to write expert systems and rule processing engines using the Erlang programming language. It allows to create multiple engines, each one with its own facts and rules to be processed.',
              []
            ],
            [
              'FFLL'
            ],
            [
              [
                [
                  [
                    'ffll.sourceforge.net'
                  ]
                ]
              ],
              'The Free Fuzzy Logic Library (FFLL) is an open source fuzzy logic class library and API that is optimized for speed critical applications, such as video games. FFLL is able to load files that adhere to the IEC 61131-7 standard.',
              []
            ]
          ],
          [
            [
              'FLiP'
            ],
            [
              [
                [
                  [
                    'http://staff.washington.edu/jon/flip/www/'
                  ]
                ]
              ],
              'Flip is a logical framework written in Python. A logical framework is a library for defining logics and writing applications such as theorem provers. The checker can use different logics; Flip comes with several. You can add another logic, or add axioms and derived rules, by writing a module in Python. Python is both the object language and the metalanguage. Formulas, inference rules, and entire proofs are Python expressions. Prover commands are Python functions.',
              []
            ],
            [
              'Fuzzy sets for Ada'
            ],
            [
              [
                [
                  [
                    'http://www.dmitry-kazakov.de/ada/fuzzy.htm'
                  ],
                  [
                    'http://freshmeat.net/projects/fuzzy/'
                  ]
                ]
              ],
              'Fuzzy sets for Ada is a library providing implementations of confidence factors with the operations not, and, or, xor, +, and *, classical fuzzy sets with the set-theoretic operations and the operations of the possibility theory, intuitionistic fuzzy sets with the operations on them, fuzzy logic based on the intuitionistic fuzzy sets and the possibility theory; fuzzy numbers, both integer and floating-point with conventional arithmetical operations, and linguistic variables and sets of linguistic variables with operations on them. String-oriented I/O is supported.',
              []
            ]
          ],
          [
            [
              'HTK'
            ],
            [
              [
                [
                  [
                    'htk.eng.cam.ac.uk'
                  ]
                ]
              ],
              'The Hidden Markov Model Toolkit (HTK) is a portable toolkit for building and manipulating hidden Markov models. HTK consists of a set of library modules and tools available in C source form. The tools provide sophisticated facilities for speech analysis, HMM training, testing and results analysis. The software supports HMMs using both continuous density mixture Gaussians and discrete distributions and can be used to build complex HMM systems. The HTK release contains extensive documentation and examples.',
              []
            ],
            [
              'JCK'
            ],
            [
              [
                [
                  [
                    'www.pms.informatik.uni-muenchen.de/software/jack/'
                  ]
                ]
              ],
              [
                [
                  'JCK consists of three components:',
                  '- JCHR: Java Constraint Handling Rules. A high-level language to write constraint solvers.',
                  '- JASE: Java Abstract Search Engine. A generic search engine for JCHR to solve constraint problems.',
                  '- VisualCHR: An interactive tool to visualize JCHR computations.'
                ]
              ],
              []
            ]
          ],
          [
            [
              'KANREN'
            ],
            [
              [
                [
                  [
                    'kanren.sourceforge.net'
                  ]
                ]
              ],
              'KANREN is a declarative logic programming system with first-class relations, embedded in a pure functional subset of Scheme. The system has a set-theoretical semantics, true unions, fair scheduling, first-class relations, lexically-scoped logical variables, depth-first and iterative deepening strategies. The system achieves high performance and expressivity without cuts.',
              []
            ],
            [
              'LK'
            ],
            [
              [
                [
                  [
                    'www.cs.utoronto.ca/~neto/research/lk/'
                  ]
                ]
              ],
              'LK is an implementation of the Lin-Kernighan heuristic for the Traveling Salesman Problem and for the minimum weight perfect matching problem. It is tuned for 2-d geometric instances, and has been applied to certain instances with up to a million cities. Also included are instance generators and Perl scripts for munging TSPLIB instances. ',
              'This implementation introduces ``efficient cluster compensation\'\', an experimental algorithmic technique intended to make the Lin-Kernighan heuristic more robust in the face of clustered data.',
              []
            ]
          ],
          [
            [
              'LingPipe'
            ],
            [
              [
                [
                  [
                    'http://alias-i.com/lingpipe/'
                  ]
                ]
              ],
              'LingPipe is a state-of-the-art suite of natural language processing tools written in Java that performs tokenization, sentence detection, named entity detection, coreference resolution, classification, clustering, part-of-speech tagging, general chunking, fuzzy dictionary matching.',
              []
            ],
            [
              'Logfun'
            ],
            [
              [
                [
                  [
                    'http://www.irisa.fr/lande/ferre/logfun/'
                  ]
                ]
              ],
              'Logfun is a library of logic functors. A logic functor is a function that can be applied to zero, one or several logics so as to produce a new logic as a combination of argument logics. Each argument logic can itself be built by combination of logic functors. The signature of a logic is made of a parser and a printer of formulas, logical operations such as a theorem prover for entailment between formulas, and more specific operations required by Logical Information Systems (LIS). Logic functors can be concrete domains like integers, strings, or algebraic combinators like product or sum of logics.',
              'Logic functors are coded as Objective Caml modules. A logic semantics is associated to each of these logic functors. This enables to define properties of logics like the consistency and completeness of the entailment prover, and to prove under which conditions a generated entailement prover satisfies these properties given the properties of argument logics.',
              []
            ]
          ],
          [
            [
              'Loom'
            ],
            [
              [
                [
                  [
                    'http://www.isi.edu/isd/LOOM/'
                  ]
                ]
              ],
              [
                'PowerLoom'
              ],
              'Loom is a language and environment for constructing intelligent applications. The heart of Loom is a knowledge representation system that is used to provide deductive support for the declarative portion of the Loom language. Declarative knowledge in Loom consists of definitions, rules, facts, and default rules. A deductive engine called a classifier utilizes forward-chaining, semantic unification and object-oriented truth maintainance technologies in order to compile the declarative knowledge into a network designed to efficiently support on-line deductive query processing.',
              'The Loom system implements a logic-based pattern matcher that drives a production rule facility and a pattern-directed method dispatching facility that supports the definition of object-oriented methods. The high degree of integration between Loom\'s declarative and procedural components permits programmers to utilize logic programming, production rule, and object-oriented programming paradigms in a single application. Loom can also be used as a deductive layer that overlays an ordinary CLOS network. In this mode, users can obtain many of the benefits of using Loom without impacting the function or performance of their CLOS-based applications.',
              []
            ],
            [
              'maxent'
            ],
            [
              [
                [
                  [
                    'http://homepages.inf.ed.ac.uk/lzhang10/maxent_toolkit.html'
                  ],
                  [
                    'maxent.sourceforge.net'
                  ]
                ]
              ],
              'The Maximum Entropy Toolkit provides a set of tools and library for constructing maximum entropy (maxent) models in either Python or C++. Maxent Entropy Model is a general purpose machine learning framework that has proved to be highly expressive and powerful in statistical natural language processing, statistical physics, computer vision and many other fields.',
              'It features conditional maximum entropy models, L-BFGS and GIS parameter estimation, Gaussian Prior smoothing, a C++ API, a Python extension module, a command line utility, and good documentation. A Java version is also available.',
              []
            ]
          ],
          [
            [
              'Nyquist'
            ],
            [
              [
                [
                  [
                    'www-2.cs.cmu.edu/~music/nyquist/'
                  ]
                ]
              ],
              'The Computer Music Project at CMU is developing computer music and interactive performance technology to enhance human musical experience and creativity. This interdisciplinary effort draws on Music Theory, Cognitive Science, Artificial Intelligence and Machine Learning, Human Computer Interaction, Real-Time Systems, Computer Graphics and Animation, Multimedia, Programming Languages, and Signal Processing. A paradigmatic example of these interdisciplinary efforts is the creation of interactive performances that couple human musical improvisation with intelligent computer agents in real-time.',
              []
            ],
            [
              'OpenCyc'
            ],
            [
              [
                [
                  [
                    'http://www.opencyc.org/'
                  ],
                  [
                    'http://sourceforge.net/projects/opencyc/'
                  ]
                ]
              ],
              'OpenCyc is the open source version of Cyc, the largest and most complete general knowledge base and commonsense reasoning engine. An ontology based on 6000 concepts and 60000 assertions about them.',
              []
            ]
          ],
          [
            [
              'Pattern'
            ],
            [
              [
                [
                  [
                    'http://www.clips.ua.ac.be/pages/pattern'
                  ]
                ]
              ],
              'Pattern is a web mining module for the Python programming language. It bundles tools for data retrieval (Google + Twitter + Wikipedia API, web spider, HTML DOM parser), text analysis (rule-based shallow parser, WordNet interface, syntactical + semantical n-gram search algorithm, tf-idf + cosine similarity + LSA metrics) and data visualization (graph networks).',
              []
            ],
            [
              'PowerLoom'
            ],
            [
              [
                [
                  [
                    'http://www.isi.edu/isd/LOOM/PowerLoom/'
                  ]
                ]
              ],
              [
                'Loom'
              ],
              'To implement PowerLoom we developed a new programming language called STELLA, which is a Strongly Typed, Lisp-like LAnguage that can be translated into Lisp, C++ and Java. PowerLoom is written in STELLA and therefore available in Common-Lisp, C++ and Java versions.',
              []
            ]
          ],
          [
            [
              'PyCLIPS'
            ],
            [
              [
                [
                  [
                    'http://pyclips.sourceforge.net/web/'
                  ]
                ]
              ],
              'PyCLIPS is an extension module for the Python language that embeds full CLIPS functionality in Python applications. This means that you can provide Python with a strong, reliable, widely used and well documented inference engine.',
              []
            ],
            [
              'Pyke'
            ],
            [
              [
                [
                  [
                    'http://pyke.sourceforge.net/'
                  ]
                ]
              ],
              'Pyke is a knowledge-based inference engine (expert system) written in 100% python that can:',
              [
                [
                  [
                    [
                      ' Pyke may be embedded into any python program.'
                    ]
                  ],
                  [
                    [
                      ' This is done through a unique design where the individual python functions are attached to backward-chaining rules. ',
                      ' Unlike other approaches to code reuse (e.g. Zope adapters and generic functions), this allows the inference engine to ensure that all of the function\'s requirements are completely satisfied, by examining the entire call graph down to the leaves, before any of the functions are executed. ',
                      ' This is an optional feature. You don\'t need to use it if you just want the inferencing capability by itself. '
                    ]
                  ]
                ]
              ],
              []
            ]
          ],
          [
            [
              'python-dlp'
            ],
            [
              [
                [
                  [
                    'http://code.google.com/p/python-dlp/'
                  ]
                ]
              ],
              'python-dlp aims to be a contemporary expert system based on the Semantic Web technologies. Traditionally, expert systems are an application of computing and artificial intelligence with the aim of supporting software that attempts to reproduce the deterministic behavior of one or more human experts in a specific problem domain. It utilizes the efficient RETE_UL algorithm as the \'engine\' for the expert system',
              []
            ],
            [
              'Reverend'
            ],
            [
              [
                [
                  [
                    'http://sourceforge.net/projects/reverend/'
                  ]
                ]
              ],
              'Reverned is a general purpose Bayesian classifier written in Python. It is designed to be easily extended to any application domain.',
              []
            ]
          ],
          [
            [
              'Screamer'
            ],
            [
              [
                [
                  [
                    'clocc.sourceforge.net'
                  ]
                ]
              ],
              'Screamer is an extension of Common Lisp that adds support for nondeterministic programming. Screamer consists of two levels. The basic nondeterministic level adds support for backtracking and undoable side effects. On top of this nondeterministic substrate, Screamer provides a comprehensive constraint programming language in which one can formulate and solve mixed systems of numeric and symbolic constraints. Together, these two levels augment Common Lisp with practically all of the functionality of both Prolog and constraint logic programming languages such as CHiP and CLP(R). Furthermore, Screamer is fully integrated with Common Lisp. Screamer programs can coexist and interoperate with other extensions to Common Lisp such as CLOS, CLIM and Iterate.',
              []
            ],
            [
              'SimpleAI'
            ],
            [
              [
                [
                  [
                    'https://github.com/simpleai-team/simpleai'
                  ]
                ]
              ],
              'Python library that implements many of the artificial intelligence algorithms described on the book "Artificial Intelligence, a Modern Approach", from Stuart Russel and Peter Norvig. Emphasis on creating a stable, modern, and maintainable version. We are testing the majority of the lib, it\'s available via pip install, has a standard repo and lib architecture, well documented, respects the python pep8 guidelines, provides only working code (no placeholders for future things), etc. Even the internal code is written with readability in mind, not only the external API.',
              [
                'https://code.google.com/p/aima-python/'
              ],
              []
            ]
          ],
          [
            [
              'SPASS'
            ],
            [
              [
                [
                  [
                    'http://www.spass-prover.org/'
                  ]
                ]
              ],
              'SPASS: An Automated Theorem Prover for First-Order Logic with Equality',
              'If you are interested in first-order logic theorem proving, the formal analysis of software, systems, protocols, formal approaches to AI planning, decision procedures, modal logic theorem proving, SPASS may offer you the right functionality.',
              []
            ],
            [
              'Torch'
            ],
            [
              [
                [
                  [
                    'www.torch.ch'
                  ],
                  [
                    'Torch5'
                  ]
                ]
              ],
              'Torch is a machine-learning library, written in C++. Its aim is to provide the state-of-the-art of the best algorithms. It is, and it will be, in development forever.',
              [
                [
                  'Many gradient-based methods, including multi-layered perceptrons, radial basis functions, and mixtures of experts. Many small "modules" (Linear module, Tanh module, SoftMax module, ...) can be plugged together. ',
                  'Support Vector Machine, for classification and regression. ',
                  'Distribution package, includes Kmeans, Gaussian Mixture Models, Hidden Markov Models, and Bayes Classifier, and classes for speech recognition with embedded training. ',
                  'Ensemble models such as Bagging and Adaboost. ',
                  'Non-parametric models such as K-nearest-neighbors, Parzen Regression and Parzen Density Estimator. '
                ]
              ],
              'Torch is an open library whose authors encourage everybody to develop new packages to be included in future versions on the official website.'
            ]
          ]
        ];
